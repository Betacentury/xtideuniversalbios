#summary Instructions for XTIDE Universal BIOS v2.0.0
*Table of Contents*
<wiki:toc max_depth="3" />
----

= Introduction =

XTIDE Universal BIOS makes possible to use modern large ATA hard disks or Compact Flash cards on old PC's. You can then enjoy quiet or noiseless drives with more capacity than you'll ever need for old computers.

XTIDE Universal BIOS can be used on any IBM PC, XT, AT and 100% compatible system. On AT systems you can use any 16-ISA or VLB IDE or Multi I/O controller. For XT systems you can use XTIDE rev1 (not available anymore), [http://www.vintage-computer.com/vcforum/showwiki.php?title=XTIDE+Rev2 XTIDE rev2] or [http://www.retrotronics.org/tiki/tiki-index.php JR-IDE/ISA].



== Features ==

Some of the features included in XTIDE Universal BIOS are...
  * Supports up to 4 IDE controllers
  * Support for virtual drives using serial port
  * Supports drives with any capacity (MS-DOS 7.x or FreeDOS is required to access more than 8.4 GB)
  * PIO transfers with block mode support
  * Hard disk autodetection
  * Autodetected capacity, both CHS and LBA, can be overridden to make drive appear smaller than it is
  * Boot menu for selecting any floppy drive or hard disk to boot from, including hard disks that are not handled by XTIDE Universal BIOS
  * Compact Flash and Microdrive support
  * Support for most 8-, 16-, and 32-bit IDE controllers
...and many more.


== Different builds ==

At the moment there are different builds included in the XTIDE Universal BIOS zip file.
  * IDE_XT.BIN, IDE_JR8K.BIN and IDE_XTL.BIN (XT build)
   XT build uses only instructions supported by 8086/8088 making it the only build that can be used on any PC, including the original IBM PC model 5150. IDE_XT.BIN is 8 kiB image and IDE_XTL.BIN is 16 kiB image with support for JR-IDE/ISA. IDE_JR8K.BIN has JR-IDE/ISA support but serial port features are removed to reduce the size to 8 kiB.
  * IDE_XTP.BIN and IDE_XTPL.BIN (XT+ build)
   XT+ build has the same features as the XT build but XT+ build uses instructions introduced in 80186/80188. Those instructions are supported by all later x86 CPUs, including NEC V20/V30. 8-bit transfers rates will be better thanks to INS and OUTS instructions. IDE_XTP.BIN is 8 kiB image and IDE_XTPL.BIN is 16 kiB image with support for JR-IDE/ISA.
  * IDE_AT.BIN (AT build)
   AT build is meant for all AT class machines (16-bit or 32-bit bus). AT build supports OS hooks to allow operating system to do some processing while drive seeks the requested data (if interrupts are enabled).

Normal XT builds are preconfigured for XTIDE rev1 at port 300h and IDE_JR8K.BIN is preconfigured for JR-IDE/ISA. AT builds are configured to search standard Primary and Secondary IDE drives, XTIDE rev1 at port 300h and 4th stardard IDE controller at port 168h (found on many sound cards). Interrupts are disabled by default on all builds.

----

= Installing XTIDE Universal BIOS =

== Hardware supporting XTIDE Universal BIOS ROM ==

The most convenient way to use XTIDE Universal BIOS is to use [http://www.vintage-computer.com/vcforum/showwiki.php?title=XTIDE+Rev2 XTIDE card]. It can be used on any PC with free 8-bit ISA slot. You might not want to connect any drives to it in 16- or 32-bit systems since 8-bit transfer will be very slow. Using XTIDE card allows EEPROM flashing so it is really easy to update XTIDE Universal BIOS.

Another option is to use any card with free ROM socket for 8 kiB or larger ROMs. Official XTIDE builds are meant for 8 kiB and 16 kiB ROMs but you can burn it on larger ROM if you append enough zeroes to the end (only append zeroes so checksum does not change). Many network cards have unused ROM sockets but there are also few multi I/O cards and IDE controllers with ROM sockets. The network card remains fully usable even if you place XTIDE Universal BIOS ROM on it.

You don't need EPROM/EEPROM programmer if you already have XTIDE card. XTIDE card can be used to flash additional EEPROMs (8 kiB 2864) that can be moved to EPROM (8 kiB 2764) sockets.


== Configuring and flashing ==

XTIDE Universal BIOS comes with DOS utility called XTIDECFG.COM. It configures XTIDE Universal BIOS and also works as a generic EEPROM flasher supporting EEPROM sizes up to 32 kiB. IXTIDECFG.COM allows saving changes to BIOS images so that they can be programmed with other programming software or device.


== Other things to know ==

CTRL can be held down to skip XTIDE Universal BIOS initialization. Right time to press CTRL down is when POST OK beep is heard or just before all memory is tested.


----

= Using XTIDECFG.COM (XTIDE Universal BIOS configuration and flashing program) =

XTIDECFG.COM is intended to be user friendly. At the bottom of the screen appears quick information for each menu item. Pressing F1 displays more detailed help for menu item (some menu items do not have detailed help available). Up, Down, PgUp, PgDn, Home and End keys are used for menu navigation. Enter selects menuitem and Esc resumes to previous menu.

Some menu items appear only when needed to make configuring easier.


== Menuitems on "Main Menu" ==
  * Exit to DOS
   Exits to DOS. If any changes are made, then dialog is displayed about saving the changes. You can also exit to DOS by pressing Esc at the main menu.
  * Load BIOS from file
   Loads any (not just XTIDE Universal BIOS) file to be flashed.
  * Load BIOS from EEPROM
   Loads XTIDE Universal BIOS from EEPROM to be reconfigured if supported version of XTIDE Universal BIOS is found in system.
  * Load old settings from EEPROM
   Loads current settings from EEPROM if supported version of XTIDE Universal BIOS is found in system.
  * Configure XTIDE Universal BIOS
   This menuitem appears only when supported version of XTIDE Universal BIOS is loaded to be configured.
  * Flash EEPROM
   This menuitem appears when file is loaded.

== Menuitems on "Flash EEPROM" submenu ==
  * Start flashing
  * EEPROM type [default=2864]
   Selects EEPROM type. XTIDE rev1 uses 2864 (8 kiB) EEPROM. Select 2864mod if you have done the A0<->A3 address line swap mod to your XTIDE.
  * SDP command [default=Enable]
   Selects Software Data Protect command to be written before every page. You should set if to Enable if the EEPROM supports is.
  * Page size [default=1]
   Large page makes flashing faster. You'll probably want to select largerst that your EEPROM supports. Slow XT systems might not be fast enough for largest page sizes.
  * EEPROM address [default=D000h]
   Segment address where the EEPROM locates. Supported versions of XTIDE Universal BIOS will be detected automatically.
  * Generate checksum byte [default=Yes]
   You'll want to enable this if you have done any changes to XTIDE Universal BIOS settings. This option will generate checksum byte to the end of EEPROM.

== Menuitems on "Configure XTIDE Universal BIOS" submenu ==
  * Back to Main Menu
  * Primary IDE Controller
  * Secondary IDE Controller
  * Tertiary IDE Controller
  * Quaternary IDE Controller
   Each "xxx IDE Controller" submenu displays IDE controller specific settings. "IDE controllers" menuitem specifies the visible "xxx IDE Controller" submenus.
  * Boot settings
   Opens submenu for boot related settings such as should boot menu be enabled etc.
  * Full operating mode [default=No for XT builds, Yes for AT builds]
   "Full operating mode" reserves a bit of Conventional memory for XTIDE Universal BIOS variables. Disabling this will reduce maximum number of IDE controllers to 2 and place the variables to memory area reserved for IBM ROM Basic. You should always enable this unless:
    # You want to use IBM ROM Basic or any software that requires that memory area.
    # You have any Tandy 1000 model with 640k or less RAM (see "kiB to steal from RAM" for a fix).
    # You really need the 1k of Conventional memory that "Full operating mode" requires.
  * kiB to steal from RAM [default=1]
   This menuitem will appear only when "Full operating mode" is enabled. Leave this to 1 unless you really need to enable "Full operating mode" on any Tandy 1000 model with 640k or less RAM. Setting this to 33 (almost always enough) or 65 (always enough) in such case will reserve the top of RAM to Tandy video circuitry thus disabling sharing of conventional memory with video circuitry.

== Menuitems on "Boot settings" submenu ==
  * Display Mode [default=Default]
   This setting allows you to force display mode change before boot menu is displayed. This setting will work even if boot menu is disabled and will leave the specified display mode set when booting to OS. Forcing display mode can be handy if you have composite monitor (use 40 column modes for better readability) or black&white analog monitor (use 80 column black&white modes for better readability).
  * Number of Floppy Drives [default=Auto]
   In some systems number of floppy drives cannot be properly auto detected. This settings allows you to specify it manually so all drives can be displayed on boot menu.
  * Scan for Serial Devices [default=No]
  * Boot Menu [default=Yes]
   You can disable boot menu if you don't like it for some reason. Normal Drive A, then C, then INT 18h (ROM Basic, ROM DOS or boot error) boot order is used when boot menu is disabled.
  * Default boot drive [default=80h]
   Specifies what drive is highlighted on boot menu by default.
  * Selection timeout [default=540]
   Specifies the duration before auto selecting default boot drive from boot menu. 1 tick = 54.9 ms so default duration of 540 is about 30 seconds.
  * Swap boot drive numbers [default=yes]
   MS-DOS and old operating systems can only boot from first floppy or hard disk drive. Swapping boot drive numbers allows booting from all drives in the system.


== Menuitems on "xxx IDE Controller" submenus ==
  * Back to Configuration Menu
   Moves back to "Configure XTIDE Universal BIOS" submenu.
  * Master Drive
  * Slave Drive
   Opens submenu for Master/Slave Drive specific settings on this IDE Controller.
  * Device Type [default=XTIDE for XT builds, 16-bit for AT builds]
   Type of device. 16-bit will support all standard IDE controllers, including VLB controllers. 32-bit will use 32-bit transfers on VLB controllers but those controllers usually require native support for full speed. Other devices include XTIDE rev1 (and rev2 slow mode), XTIDE mod with swapped A0 and A3 address lines (XTIDE rev2 fast mode), JR-IDE/ISA (IDE_JR8K.BIN and 16 kiB builds only) and support for virtual devices through serial port.
  * Base (cmd block) address [default=300h for XT builds, 1F0h for AT builds (Primary IDE)]
   Command block (base port) address where the IDE Controller is located. JR-IDE/ISA does not use this setting.
  * Control block address [default=308h for XT builds, 3F0h for AT builds (Primary IDE)]
   Set to base port + 8h for XTIDE rev1 and rev2. Set to base port + 200h for standard IDE controllers. JR-IDE/ISA does not use this setting.
  * Enable interrupt [default=no]
   Enables interrupt but it does not offer any benefit for MS-DOS. Do not enable unless you know you need it.
  * IRQ [default=14 for Primary IDE, 15 for Secondary IDE]
   IRQ channel to use for IDE controllers.
  * COM Port [default=COM1]
  * Baud Rate [default=9600]

== Menuitems for "Master/Slave Drive" submenus ==
  * Back to IDE Controller Menu
  * Block Mode Transfers [default=Yes]
   Block Mode Transfers will speed up the transfer rates. This should be leaved enabled but there is at least one old hard drive with buggy block mode support when interrupts are enabled (Quantum, maybe 100MB).
  * Internal Write Cache [default=Disabled]
   Leave to disabled unless you know what you are doing! Improper use of write cache can cause data corruption.
  * User specified CHS [default=no]
   Specify CHS parameters manually. This will force the drive to CHS addressing and EBIOS functions will be disabled.
  * User specified LBA [default=no]
   Specify drive capacity manually (starting from 8.4 GB). All versions of MS-DOS 7.x seem to have compatibility problems with very large drives so you might need to reduce drive capacity. Use FreeDOS if you want to use full capacity of the drive.
  * Cylinders, Heads and Sectors per track
   These will appear when "User specified CHS" is enabled. Maximum values of 16383 Cylinders, 16 Heads and 63 Sectors per track will provide capacity of 7.8 GiB/8.4 GB that is the maximum that MS-DOS 4.xx to 6.xx supports. Note that this will force CHS addressing so once formatted, there will be data corruption if you try to access the drive with system using LBA addressing.
  * Millions of sectors
   This will appear when "User specified LBA" is enabled. You can specify the drive capacity in millions of sectors. Note that MS-DOS 7.x or FreeDOS is required to access more than 7.8 GiB/8.4 GB.